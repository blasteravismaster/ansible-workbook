---
 - name: This module is to install the basic required package in the NAGIOS server
   yum:
    name: "{{ item }}"
    state: latest
   with_items:
     - httpd
     - php
     - php-mbstring
     - php-pear
     - gcc
     - glibc
     - glibc-common
     - gd
     - gd-devel
   when:
     - nagios_master == "master"

# - debug: msg="The value of nagios_master is {{ nagios_master }}"

 - name: Installing the nagios nagios-plugins  package
   yum:
    name: "{{ item }}"
    enablerepo: epel
   with_items:
     - nagios
     - nagios-plugins
     - nagios-plugins-all
     - nagios-plugins-apt
     - nagios-plugins-bdii
     - nagios-plugins-bonding
     - nagios-plugins-breeze
     - nagios-plugins-by_ssh
     - nagios-plugins-check-updates
     - nagios-plugins-cluster
     - nagios-plugins-dbi
     - nagios-plugins-dhcp
     - nagios-plugins-dig
     - nagios-plugins-disk
     - nagios-plugins-disk_smb
     - nagios-plugins-dns
     - nagios-plugins-dpm-disk
     - nagios-plugins-dpm-head
     - nagios-plugins-dummy
     - nagios-plugins-file_age
     - nagios-plugins-flexlm
     - nagios-plugins-fping
     - nagios-plugins-fts
     - nagios-plugins-game
     - nagios-plugins-hpjd
     - nagios-plugins-http
     - nagios-plugins-icmp
     - nagios-plugins-ide_smart
     - nagios-plugins-ifoperstatus
     - nagios-plugins-ifstatus
     - nagios-plugins-ircd
     - nagios-plugins-lcgdm
     - nagios-plugins-lcgdm-common
     - nagios-plugins-ldap
     - nagios-plugins-lfc
     - nagios-plugins-load
     - nagios-plugins-log
     - nagios-plugins-mailq
     - nagios-plugins-mrtg
     - nagios-plugins-mrtgtraf
     - nagios-plugins-mysql
     - nagios-plugins-nagios
     - nagios-plugins-nrpe
     - nagios-plugins-nt
     - nagios-plugins-ntp
     - nagios-plugins-ntp-perl
     - nagios-plugins-nwstat
     - nagios-plugins-openmanage
     - nagios-plugins-oracle
     - nagios-plugins-overcr
     - nagios-plugins-perl
     - nagios-plugins-pgsql
     - nagios-plugins-ping
     - nagios-plugins-procs
     - nagios-plugins-radius
     - nagios-plugins-real
     - nagios-plugins-rhev
     - nagios-plugins-rpc
     - nagios-plugins-sensors
     - nagios-plugins-smtp
     - nagios-plugins-snmp
     - nagios-plugins-ssh
     - nagios-plugins-swap
     - nagios-plugins-tcp
     - nagios-plugins-time
     - nagios-plugins-ups
     - nagios-plugins-uptime
     - nagios-plugins-users
     - nagios-plugins-wave
   when:
     - nagios_master == "master"

 - name: Add group nagios
   group:
    name: nagios
    state: present

 - name: Create user nagios and add group nagcmd
   user:
    name: nagios
    comment: "This is nagios user"
    group: nagios
    state: present
   when:
     - nagios_master == "master"

# - name: Adding user apache to nagcmd group
#   user:
#    name: apache
#    groups: nagcmd
#   when:
#     - nagios_master == "master"
#
# - name: Next change the admins email address to appropiately in the contacts.cfg
#   template:
#    src: templates/contacts.cfg.j2
#    dest: /etc/nagios/objects/contacts.cfg
#    owner: nagios
#    group: nagcmd
#   when:
#     - nagios_master == "master"
#
# - name: Copy the nagios.conf to the respective location
#   template:
#    src: templates/nagios.conf.j2
#    dest: /etc/httpd/conf.d/nagios.conf
#    owner: apache
#    group: apache
#   when:
#     - nagios_master == "master"

 - name: This is install the package python-passlib for httpdpaswd to work
   yum:
    name: python-passlib
    state: latest
   when:
     - nagios_master == "master"

 - name: Setting password for the user Nagios Admin
   htpasswd:
    path: /etc/nagios/passwd
    name: nagiosadmin
    password: 'nagiosadmin'
    owner: root
    group: apache
    mode: 0640
   when:
     - nagios_master == "master"

# - name: Copy the nagios.cfg to the respective location
#   template:
#    src: templates/nagios.cfg.j2
#    dest: /etc/nagios/nagios.cfg
#    owner: nagios
#    group: nagios
#   when:
#     - nagios_master == "master"
#
# - name: Copy the commands.cfg(file to create the real command to be executed on server) to the respective location
#   template:
#    src: templates/commands.cfg.j2
#    dest: /etc/nagios/objects/commands.cfg
#    owner: root
#    group: nagcmd
#   when:
#     - nagios_master == "master"

 - name: Make sure the directory for placing the servers config mentioned in the nagios.cfg is present
   file: 
    path: /etc/nagios/
    state: directory
    group: nagios
    mode: 0750
    recurse: yes
   when:
     - nagios_master == "master"

# - name: Copy the client cfg file which has the parameters of what to be checked
#   template:
#    src: templates/clientname.cfg.j2
#    dest: /root/"{{ ansible_hostname }}".cfg
#
# - name: Pull the file from the remote server to current location
#   fetch:
#    src: /root/{{ ansible_hostname }}.cfg
#    dest: /etc/nagios/servers/
#    flat: yes

 - name: Stop the Iptable service
   service:
    name: iptables
    state: stopped

 - name: Enabling boot time on and restarting the Nagios and Httpd service
   service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
   with_items:
     - nagios
     - httpd
   when:
     - nagios_master == "master"

# - name: Install the client side rpms nrpe
#   yum:  
#    name: "{{ item }}"
#    enablerepo: epel
#    state: latest
#   with_items:
#     - nrpe
#     - "nagios-plugins*" 
#
# - name: Copy the nrpe file to client machine
#   template:
#    src: templates/nrpe.cfg.j2
#    dest: /etc/nagios/nrpe.cfg
#
# - name: Next Enable the service on boot up and restart the service
#   service:
#    name: nrpe
#    enabled: yes
#    state: restarted
# 

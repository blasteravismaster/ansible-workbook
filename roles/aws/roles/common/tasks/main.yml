---
 - name: Enforce the webgroup exists
   ec2_group:
    name: webgroup
    description: This is an webgroup
    region: us-east-1
    rules:      ### Inbound Rules
      - proto: icmp # Allowing Ping
        from_port: -1 # icmp type, -1 = any type
        to_port:  -1 # icmp subtype, -1 = any subtype
        cidr_ip: 0.0.0.0/0
      - proto: tcp # Allowing SSH
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress: #### Outbound Rules
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0

 - name: Enforce dbgroup exists
   ec2_group:
    name: dbgroup
    description: This is an dbgroup
    region: us-east-1
    rules:      ### Inbound Rules
      - proto: icmp # Allowing Ping
        from_port: -1 # icmp type, -1 = any type
        to_port:  -1 # icmp subtype, -1 = any subtype
        cidr_ip: 0.0.0.0/0
      - proto: tcp # Allowing SSH
        from_port: 3306
        to_port: 3306
        cidr_ip: 0.0.0.0/0

 - name: Creating EC2 instance for web servers for zone 
   ec2:
     group: '{{ item.group }}'
     exact_count: 1
     instance_type: 't2.micro'
     image: '{{ item.image }}'
     wait: no
     region: 'us-east-1'
     zone: '{{ item.zone }}'
     key_name: ec2all
     count_tag: "{{ item.tags }}"
     instance_tags: "{{ item.tags }}"
   register: ec2
   with_items: "{{ec2_instances}}"

 - name: Creating ELB
   local_action:
    module: ec2_elb_lb
    name: HTTPLoadBalancer
    security_group_names: webgroup
    state: present
    region: us-east-1
    zones:
      - us-east-1a
      - us-east-1b
    listeners:
      - protocol: http # options are http, https, ssl, tcp
        load_balancer_port: 80
        instance_port: 80
        proxy_protocol: True

# - name: Gathering ec2 facts
#   action: ec2_facts

 - name: Printing all the variables which we got for instances id
   shell: aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=tag-value,Values=http" --output text --query "Reservations[*].Instances[*].{ID:InstanceId}"
   register: instvalues

 - name: Register the newly created instances to the ELB
   local_action:
     module: ec2_elb
     instance_id: "{{ item }}"
     ec2_elbs: webgroup
     region: us-east-1
     state: present
   with_items:
      - "{{ instvalues }}"

# - name: Uploading my image to S3 for serving the webserver
#   s3:
#    bucket: kobigha
#    object: /images/1.jpg
#    src: files/1.jpg
#    mode: put
#
